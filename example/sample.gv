// gravel compiler is not implemented yet...

module Sample;

enum List<T> {
  Nil;
  Cons(T, List!<T>);
}

struct PoInt {
	x: Int;
	y: Int;
}

def<T: ToString> prInt(t: T) = {
	prIntln(t.to_string())
}

def main() = {
	let poInt = PoInt { x: 0, y: 0 };
	let list = Cons(poInt, Cons(poInt, Nil));
	prInt(list); // => (0, 0) :: (0, 0) :: Nil
	let p: ToString = poInt; // Automatically converted to trait object
	let l: ToString = list;
}
